<HTML>

<HEAD>
<META NAME="GENERATOR" Content="Microsoft Visual Studio 8.0">
<TITLE>DiZ Documentation: DiZ Graphics- DIZ_FONTINFO</TITLE>
<link rel="Stylesheet" type="text/css" href="../../Resources/layout.css" />
</HEAD>

<BODY>
<h1>DiZ Documentation: DIZ_FONTINFO</h1>
<a href="../../index.htm">Index</a> -> <a href="../diz_graphics_index.htm">DiZ Graphics</a><br /><br />

<ul>
    <li><a href="#overview">Overview</a></li>
    <li><a href="#declarations">Declarations</a></li>
    <li><a href="#example">Example</a></li>
</ul>
<hr />

<h2><a id="overview">Overview</a></h2>
<code>DIZ_FONTINFO</code> is a structure used to contain all information necessary for the description of an OpenGL Font. Users need not
create their own instances of <code>DIZ_FONTINFO</code>- it is a member of the class <code>DIZ_FONT</code>.

<h2><a id="declarations">Declaration</a></h2>
<pre class="code">
//This structure contains all the info needed for a GL font
struct DIZ_FONTINFO {
	//The name of the font we want to use
	char *font;
	//The type of font- Bitmap or Outline
	int type;
	//The height, width, and weight values of our font
	int height, width, weight;
	//The Angle of Escapement and Orientation values
	int escAng, orientation;
	//Options for Italics, Underlines, Strikeouts
	bool italic, underline, strikeout;
	//The character set we want to use
	DWORD charSet;
	//Output Precision and Clipping Precision
	DWORD outPrecis, clipPrecis;
	//Output Quality
	DWORD outQuality;
	//Font Family and Pitch
	DWORD family;
	//Deviation and Thickness values- used for Outline fonts
	float deviation, thickness;
	//Type of outline- typically WGL_FONT_POLYGONS or WGL_FONT_LINES
	int outlineType;
};
</pre>

<h4>char *font</h4>
This is the name of the font that we want to use. Default is <code>Arial</code>.

<h4>int type</h4>
This is the specific type of font, which you should set to <code>DIZ_FONT_BITMAP</code> or <code>DIZ_FONT_OUTLINE</code>. Bitmap fonts are
2D while Outline fonts are 3D. Default is <code>DIZ_FONT_BITMAP</code>.

<h4>int height</h4>
The height of the font. Default is <code>-24</code>. Negative values are common for this; <code>-36</code> is bigger than <code>-24</code>
and so on.

<h4>int width</h4>
The width of the font. This is not a definite indicator of width, rather just a modifier of the font's default width. Therefore the default
is <code>0</code>, which changes nothing of the font.

<h4>int weight</h4>
This is the weight of the font, e.g. Bold, Normal and so on. Default is <code>FW_NORMAL</code> but values such as <code>FW_BOLD</code> are
also possible. Typically, the higher the value, the thicker the font.

<h4>int escAng</h4>
This is the angle of escapement of the font. Default is <code>0</code>.

<h4>int orientation</h4>
This is the angle of orientation for the font; i.e. the angle each character is written at. Default is <code>0</code>.

<h4>bool italic</h4>
Whether or not the font is drawn in italics. Default is <code>false</code>.

<h4>bool underline</h4>
Whether or not the font is underlined. Default is <code>false</code>.

<h4>bool strikeout</h4>
Whether or not the font is drawn with a strikeout. Default is <code>false</code>.

<h4>DWORD charset</h4>
This setting specifies the character set to use. This probably isn't worth using unless you know you have specific needs for a particular
character set in your program. Default is <code>ANSI_CHARSET</code>.

<h4>DWORD outPrecis</h4>
This is the output precision of the font. It affects the font used if there is more than one available for your request. Defaults to
<code>OUT_TT_PRECIS</code>. This suggests the use of TrueType fonts.

<h4>DWORD clipPrecis</h4>
This is the clipping precision of the font. This affects how the font is clipped when part of it is drawn outside the drawing region,
i.e. offscreen. Default is <code>CLIP_DEFAULT_PRECIS</code>.

<h4>DWORD outQuality</h4>
This setting affects the quality of the ouput of the font. Defaults to <code>ANTIALIASED_QUALITY</code> for anti-aliased text.

<h4>DWORD family</h4>
This setting affects the Family and Pitch of the font. I haven't messed around with these before so I don't know quite what differences it
makes though. Defaults to <code>FF_DONTCARE | DEFAULT_PITCH</code>.

<h4>float deviation</h4>
This is a fairly important setting, used only in Outline fonts. The lower the number, the more true your font will be to the actual font.
Note however that having this at a low setting can greatly increase the loading time for the font. Therefore it is suggested to find
an ideal halfway value for your program. Default is <code>0.2f</code>.

<h4>float thickness</h4>
Also used only in Outline fonts, this setting affects the thickness of the font on the Z axis. Defaults to <code>1.0f</code>.

<h4>int outlineType</h4>
This setting specifies the type of font used when using an Outline font. This is usually <code>WGL_FONT_POLYGONS</code> or 
<code>WGL_FONT_LINES</code>, for polygonal fonts and line fonts respectively. Default is <code>WGL_FONT_POLYGONS</code>.

<h2><a id="example">Example</a></h2>

The following example shows the setup of a <code>DIZ_FONTINFO</code> structure.

<pre class="code">
    //These values will provide a proper working font
    info.font			= "Calibri";
    info.type			= DIZ_FONT_OUTLINE;
    info.height			= -12;
    info.width			= 0;
    info.weight			= FW_NORMAL;
    info.italic			= false;
    info.strikeout		= false;
    info.underline		= false;
    info.escAng			= 0;
    info.orientation	= 0;
    info.charSet		= ANSI_CHARSET;
    info.outPrecis		= OUT_TT_PRECIS;
    info.clipPrecis		= CLIP_DEFAULT_PRECIS;
    info.outQuality		= ANTIALIASED_QUALITY;
    info.family			= FF_DONTCARE | DEFAULT_PITCH;
    info.deviation		= 1.0f;
    info.thickness		= 0.1f;
    info.outlineType	= WGL_FONT_POLYGONS;
</pre>
</BODY>

</HTML>
